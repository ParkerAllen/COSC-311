package cocs311hw3;

public class CircularQueue {
    
    int queue[];
    int head, tail;
    
    public CircularQueue(int[] q){
        queue = q;
        head = tail = 0;
    }
    
    public boolean isFull(){
        return head == tail + 1;
    }
    
    public boolean isEmpty(){
        return head == tail;
    }
    
    public void insert(int x){
        if(!isFull()){
            queue[tail = (tail + 1) % queue.length] = x;
        }
        else
            System.out.println("Error");
    }
    
    public int delete(){
        if(!isEmpty())
            return queue[head = (head + 1) % queue.length];
        else
            System.out.println("Error");
        return 0;
    }
    
    void printQueue() {
        if ( !isEmpty() )
            for (int i = head; i != tail-1; i = (i + 1) % queue.length) 
                System.out.print(queue[i]);
    }
}
